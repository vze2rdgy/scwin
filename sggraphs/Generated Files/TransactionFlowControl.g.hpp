//------------------------------------------------------------------------------
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//------------------------------------------------------------------------------
#include "pch.h"

#pragma warning(push)
#pragma warning(disable: 4100) // unreferenced formal parameter

#if defined _DEBUG && !defined DISABLE_XAML_GENERATED_BINDING_DEBUG_OUTPUT
extern "C" __declspec(dllimport) int __stdcall IsDebuggerPresent();
#endif

#include "TransactionFlowControl.xaml.h"

void ::sggraphs::TransactionFlowControl::InitializeComponent()
{
    if (_contentLoaded)
    {
        return;
    }
    _contentLoaded = true;
    ::Windows::Foundation::Uri^ resourceLocator = ref new ::Windows::Foundation::Uri(L"ms-appx:///sggraphs/TransactionFlowControl.xaml");
    ::Windows::UI::Xaml::Application::LoadComponent(this, resourceLocator, ::Windows::UI::Xaml::Controls::Primitives::ComponentResourceLocation::Nested);
}


/// <summary>
/// Auto generated class for compiled bindings.
/// </summary>
class sggraphs::TransactionFlowControl::TransactionFlowControl_obj2_Bindings 
    : public ::XamlBindingInfo::ReferenceTypeXamlBindings<::sggraphs::TransactionFlowItem, ::XamlBindingInfo::XamlBindingTrackingBase>
{
public:
    TransactionFlowControl_obj2_Bindings()
    {
    }

    void Connect(int __connectionId, ::Platform::Object^ __target)
    {
        switch(__connectionId)
        {
            case 2: // TransactionFlowControl.xaml line 45
                this->obj2 = safe_cast<::Windows::UI::Xaml::Controls::Grid^>(__target);
                break;
            case 3: // TransactionFlowControl.xaml line 56
                this->obj3 = safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(__target);
                break;
            case 4: // TransactionFlowControl.xaml line 59
                this->obj4 = safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(__target);
                break;
            case 5: // TransactionFlowControl.xaml line 62
                this->obj5 = safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(__target);
                break;
        }
    }

    void DisconnectUnloadedObject(int connectionId)
    {
        throw ref new ::Platform::InvalidArgumentException("No unloadable elements to disconnect.");
    }

    void Recycle()
    {
    }

    void ProcessBindings(::Platform::Object^ item, int itemIndex, int phase, int* nextPhase)
    {
        switch (phase)
        {
            case 0:
                *nextPhase = -1;
                this->SetDataRoot(static_cast<::sggraphs::TransactionFlowItem^>(item));
                if (this->_dataContextChangedToken.Value != 0)
                {
                    this->obj2.Resolve<::Windows::UI::Xaml::Controls::Grid>()->DataContextChanged -= this->_dataContextChangedToken;
                    this->_dataContextChangedToken.Value = 0;
                }
                this->_isInitialized = true;
                break;
            default:
                *nextPhase = -1;
                break;
        }
        this->Update_((::sggraphs::TransactionFlowItem^) item, 1 << phase);
    }

private:
    // Fields for each control that has bindings.
    ::Platform::WeakReference obj2;
    ::Windows::UI::Xaml::Controls::TextBlock^ obj3;
    ::Windows::UI::Xaml::Controls::TextBlock^ obj4;
    ::Windows::UI::Xaml::Controls::TextBlock^ obj5;

    // Update methods for each path node used in binding steps.
    void Update_(::sggraphs::TransactionFlowItem^ obj, int phase)
    {
        if (obj != nullptr)
        {
            if ((phase & (NOT_PHASED | (1 << 0))) != 0)
            {
                this->Update_Header(obj->Header, phase);
                this->Update_SubHeader(obj->SubHeader, phase);
                this->Update_Text(obj->Text, phase);
            }
        }
    }
    void Update_Header(::Platform::String^ obj, int phase)
    {
        if((phase & ((1 << 0) | NOT_PHASED )) != 0)
        {
            // TransactionFlowControl.xaml line 56
            Set_Windows_UI_Xaml_Controls_TextBlock_Text(this->obj3, obj, nullptr);
        }
    }
    void Update_SubHeader(::Platform::String^ obj, int phase)
    {
        if((phase & ((1 << 0) | NOT_PHASED )) != 0)
        {
            // TransactionFlowControl.xaml line 59
            Set_Windows_UI_Xaml_Controls_TextBlock_Text(this->obj4, obj, nullptr);
        }
    }
    void Update_Text(::Platform::String^ obj, int phase)
    {
        if((phase & ((1 << 0) | NOT_PHASED )) != 0)
        {
            // TransactionFlowControl.xaml line 62
            Set_Windows_UI_Xaml_Controls_TextBlock_Text(this->obj5, obj, nullptr);
        }
    }
    static void Set_Windows_UI_Xaml_Controls_TextBlock_Text(::Windows::UI::Xaml::Controls::TextBlock^ obj, ::Platform::String^ value, ::Platform::String^ targetNullValue)
    {
        if (value == nullptr && targetNullValue != nullptr)
        {
            value = targetNullValue;
        }
        obj->Text = value;
    }
};

/// <summary>
/// Auto generated class for compiled bindings.
/// </summary>
class sggraphs::TransactionFlowControl::TransactionFlowControl_obj1_Bindings 
    : public ::XamlBindingInfo::ReferenceTypeXamlBindings<::sggraphs::TransactionFlowControl, ::XamlBindingInfo::XamlBindingTrackingBase>
    , public ::XamlBindingInfo::IXamlBindingTracking
{
public:
    TransactionFlowControl_obj1_Bindings()
    {
        InitializeTracking(this);
    }

private:
    ~TransactionFlowControl_obj1_Bindings()
    {
        ReleaseAllListeners();
    }

public:

    void Connect(int __connectionId, ::Platform::Object^ __target)
    {
        switch(__connectionId)
        {
            case 9: // TransactionFlowControl.xaml line 71
                this->obj9 = safe_cast<::Windows::UI::Xaml::Controls::ListView^>(__target);
                break;
        }
    }

    void DisconnectUnloadedObject(int connectionId)
    {
        throw ref new ::Platform::InvalidArgumentException("No unloadable elements to disconnect.");
    }

private:
    // Fields for each control that has bindings.
    ::Windows::UI::Xaml::Controls::ListView^ obj9;
    
    // Fields for binding tracking.

    // Update methods for each path node used in binding steps.
    void Update_(::sggraphs::TransactionFlowControl^ obj, int phase)
    {
        if (obj != nullptr)
        {
            if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
            {
                this->Update_TransactionFlowItems(obj->TransactionFlowItems, phase);
            }
        }
    }
    void Update_TransactionFlowItems(::Windows::Foundation::Collections::IVector<::sggraphs::TransactionFlowItem^>^ obj, int phase)
    {
        if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
        {
            // TransactionFlowControl.xaml line 71
            Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this->obj9, obj, nullptr);
        }
    }

    virtual void ReleaseAllListeners() override
    {
    }

    virtual void PropertyChanged(Platform::Object^ sender, ::Windows::UI::Xaml::Data::PropertyChangedEventArgs^ e) override
    {
    }

    void CollectionChanged(::Platform::Object^ sender, ::Windows::UI::Xaml::Interop::NotifyCollectionChangedEventArgs^ e)
    {
    }

    void VectorChanged(::Platform::Object^ sender, ::Windows::Foundation::Collections::IVectorChangedEventArgs^ e)
    {
    }

    void MapChanged(::Platform::Object^ sender, ::Windows::Foundation::Collections::IMapChangedEventArgs<::Platform::String^>^ e)
    {
    }

    void DependencyPropertyChanged(::Windows::UI::Xaml::DependencyObject^ sender, ::Windows::UI::Xaml::DependencyProperty^ prop)
    {
        if (sender != nullptr)
        {
        }
    }
    static void Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(::Windows::UI::Xaml::Controls::ItemsControl^ obj, ::Platform::Object^ value, ::Platform::String^ targetNullValue)
    {
        if (value == nullptr && targetNullValue != nullptr)
        {
            value = (::Platform::Object^) ::Windows::UI::Xaml::Markup::XamlBindingHelper::ConvertValue(::Platform::Object::typeid, targetNullValue);
        }
        obj->ItemsSource = value;
    }
};

void ::sggraphs::TransactionFlowControl::Connect(int __connectionId, ::Platform::Object^ __target)
{
    switch (__connectionId)
    {
    case 9:
        {
            this->ListViewOfNodes = safe_cast<::Windows::UI::Xaml::Controls::ListView^>(__target);
        }
        break;
    }
    _contentLoaded = true;
}

::Windows::UI::Xaml::Markup::IComponentConnector^ ::sggraphs::TransactionFlowControl::GetBindingConnector(int __connectionId, ::Platform::Object^ __target)
{
    ::XamlBindingInfo::XamlBindings^ bindings = nullptr;
    switch (__connectionId)
    {
        case 1: // TransactionFlowControl.xaml line 1
            {
                ::Windows::UI::Xaml::Controls::UserControl^ element1 = safe_cast<::Windows::UI::Xaml::Controls::UserControl^>(__target);
                TransactionFlowControl_obj1_Bindings* objBindings = new TransactionFlowControl_obj1_Bindings();
                objBindings->SetDataRoot(this);
                bindings = ref new ::XamlBindingInfo::XamlBindings(objBindings);
                this->Bindings = bindings;
                element1->Loading += ref new ::Windows::Foundation::TypedEventHandler<::Windows::UI::Xaml::FrameworkElement^, ::Platform::Object^>(bindings, &::XamlBindingInfo::XamlBindings::Loading);
            }
            break;
        case 2: // TransactionFlowControl.xaml line 45
            {
                ::Windows::UI::Xaml::Controls::Grid^ element2 = safe_cast<::Windows::UI::Xaml::Controls::Grid^>(__target);
                TransactionFlowControl_obj2_Bindings* objBindings = new TransactionFlowControl_obj2_Bindings();
                objBindings->SetDataRoot(element2->DataContext);
                bindings = ref new ::XamlBindingInfo::XamlBindings(objBindings);
                bindings->SubscribeForDataContextChanged(element2);
                ::Windows::UI::Xaml::DataTemplate::SetExtensionInstance(element2, bindings);
                ::Windows::UI::Xaml::Markup::XamlBindingHelper::SetDataTemplateComponent(element2, bindings);
            }
            break;
    }
    return bindings;
}

#pragma warning(pop)


