<UserControl
    x:Class="scwin.ProductEditDetails"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:scwin"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:tvs="using:TreeViewControl" 
    mc:Ignorable="d"
    d:DesignHeight="300"
    d:DesignWidth="400">

    <UserControl.Resources>

        <tvs:IntegerToIndentationConverter x:Key="IntToIndConverter"/>
        <local:GlyphConverter x:Key="folderGlyphConverter" ExpandedGlyph="&#xED44;" CollapsedGlyph="&#xED42;" />
        <local:GlyphConverter x:Key="folderOutlineGlyphConverter" ExpandedGlyph="&#xED43;" CollapsedGlyph="&#xED41;" />
        <local:GlyphConverter x:Key="expandCollapseGlyphConverter" ExpandedGlyph="&#xE70D;" CollapsedGlyph="&#xE76C;"/>
        <local:BooleanToVisibilityConverter x:Key="booleanToVisibilityConverter"  />
        <local:BooleanToVisibilityConverter x:Key="inverseBooleanToVisibilityConverter" IsInverse="True" />
        <local:CommandStateToVisibilityConverter x:Key="commandStateToVisibilityConverter" IsInverse="False"/>

        <Style TargetType="TextBlock">
            <Setter Property="TextWrapping" Value="WrapWholeWords"/>
        </Style>
        

        <DataTemplate x:Key="TreeViewItemDataTemplate">
            <StackPanel Orientation="Horizontal" Height="40" 
                        Margin="{Binding Depth, Converter={StaticResource IntToIndConverter}}" 
                        AllowDrop="{Binding Data.HasChildren}">
                <FontIcon x:Name="expandCollapseChevron" 
                          Glyph="{Binding IsExpanded, Converter={StaticResource expandCollapseGlyphConverter}}"
                          Visibility="{Binding Data.HasChildren, Converter={StaticResource booleanToVisibilityConverter}}"                           
                          FontSize="12"
                          Margin="12,8,12,8" 
                          FontFamily="Segoe MDL2 Assets"                          
                          />
                <Grid>
                    <CheckBox 
                        IsChecked="{Binding Data.Tag, Mode=TwoWay}" Tag="{Binding Data}" Checked="CheckBox_Checked"
                        Visibility="{Binding Data.HasChildren, Converter={StaticResource inverseBooleanToVisibilityConverter}}"
                        />
                    <FontIcon x:Name ="expandCollapseFolder" 
                              Glyph="{Binding IsExpanded, Converter={StaticResource folderGlyphConverter}}" 
                              Foreground="#FFFFE793" 
                              FontSize="16" 
                              Margin="0,8,12,8" 
                              FontFamily="Segoe MDL2 Assets"
                              Visibility="{Binding Data.HasChildren, Converter={StaticResource booleanToVisibilityConverter}}"
                              />

                    <FontIcon x:Name ="nonFolderIcon" 
                              Glyph="&#xE160;"
                              Foreground="{ThemeResource SystemControlForegroundBaseLowBrush}"
                              FontSize="12" 
                              Margin="20,8,12,8" 
                              FontFamily="Segoe MDL2 Assets"
                              Visibility="{Binding Data.HasChildren, Converter={StaticResource inverseBooleanToVisibilityConverter}}"
                              />

                    <FontIcon x:Name ="expandCollapseFolderOutline" 
                              Glyph="{Binding IsExpanded, Converter={StaticResource folderOutlineGlyphConverter}}" 
                              Foreground="#FFECC849" 
                              FontSize="16" 
                              Margin="0,8,12,8" 
                              FontFamily="Segoe MDL2 Assets"
                              Visibility="{Binding Data.HasChildren, Converter={StaticResource booleanToVisibilityConverter}}"/>
                </Grid>

                <TextBlock Text="{Binding Data.Name}" 
                           HorizontalAlignment="Stretch" 
                           VerticalAlignment="Center"  
                           FontWeight="Medium"
                           FontFamily="Segoe MDL2 Assests"                           
                           Style="{ThemeResource BodyTextBlockStyle}"/>
            </StackPanel>

        </DataTemplate>

    </UserControl.Resources>

    <Grid>



        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="ViewStates">
                <VisualState x:Name="ViewViewState">
                    <VisualState.Storyboard>
                        <Storyboard>
                            <FadeInThemeAnimation Storyboard.TargetName="btnEdit"/>
                            <ObjectAnimationUsingKeyFrames 
                                                Storyboard.TargetName="btnEdit" Storyboard.TargetProperty="Visibility">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                            </ObjectAnimationUsingKeyFrames>
                            <FadeOutThemeAnimation Storyboard.TargetName="btnSave"/>
                            <ObjectAnimationUsingKeyFrames 
                                                Storyboard.TargetName="btnSave" Storyboard.TargetProperty="Visibility">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                            </ObjectAnimationUsingKeyFrames>
                            <FadeOutThemeAnimation Storyboard.TargetName="btnCancel"/>
                            <ObjectAnimationUsingKeyFrames 
                                                Storyboard.TargetName="btnCancel" Storyboard.TargetProperty="Visibility">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                            </ObjectAnimationUsingKeyFrames>
                            <FadeInThemeAnimation Storyboard.TargetName="gridproductViewOnly"/>
                            <ObjectAnimationUsingKeyFrames 
                                                Storyboard.TargetName="gridproductViewOnly" Storyboard.TargetProperty="Visibility">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                            </ObjectAnimationUsingKeyFrames>
                            <FadeOutThemeAnimation Storyboard.TargetName="gridproductEditable"/>
                            <ObjectAnimationUsingKeyFrames 
                                                Storyboard.TargetName="gridproductEditable" Storyboard.TargetProperty="Visibility">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState.Storyboard>
                </VisualState>
                <VisualState x:Name="EditViewState">
                    <VisualState.Storyboard>
                        <Storyboard>
                            <FadeOutThemeAnimation Storyboard.TargetName="btnEdit"/>
                            <ObjectAnimationUsingKeyFrames 
                                                Storyboard.TargetName="btnEdit" Storyboard.TargetProperty="Visibility">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                            </ObjectAnimationUsingKeyFrames>
                            <FadeInThemeAnimation Storyboard.TargetName="btnSave"/>
                            <ObjectAnimationUsingKeyFrames 
                                                Storyboard.TargetName="btnSave" Storyboard.TargetProperty="Visibility">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                            </ObjectAnimationUsingKeyFrames>
                            <FadeInThemeAnimation Storyboard.TargetName="btnCancel"/>
                            <ObjectAnimationUsingKeyFrames 
                                                Storyboard.TargetName="btnCancel" Storyboard.TargetProperty="Visibility">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                            </ObjectAnimationUsingKeyFrames>
                            <FadeOutThemeAnimation Storyboard.TargetName="gridproductViewOnly"/>
                            <ObjectAnimationUsingKeyFrames 
                                                Storyboard.TargetName="gridproductViewOnly" Storyboard.TargetProperty="Visibility">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                            </ObjectAnimationUsingKeyFrames>
                            <FadeInThemeAnimation Storyboard.TargetName="gridproductEditable"/>
                            <ObjectAnimationUsingKeyFrames 
                                                Storyboard.TargetName="gridproductEditable" Storyboard.TargetProperty="Visibility">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState.Storyboard>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup x:Name="OtherStates">
                <VisualState x:Name="ValidationFailedState">
                    <VisualState.Storyboard>
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="btnSave" Storyboard.TargetProperty="Background">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="Red"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState.Storyboard>
                </VisualState>
                <VisualState x:Name="ValidationSuccessState">
                    <VisualState.Storyboard>
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="btnSave" Storyboard.TargetProperty="Background">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonBackground}"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState.Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <Border>
            <RelativePanel x:Name="parentPanel">
                <StackPanel 
                    x:Name="buttonPanel"
                                RelativePanel.AlignTopWithPanel="True" 
                                RelativePanel.AlignRightWithPanel="True"
                                Orientation="Horizontal"
                                >
                    <Button x:Name="btnEdit" 
                            Margin="2,2,2,2" 
                            Visibility="Visible" 
                            Tapped="btnEdit_Tapped" 
                            IsEnabled="{x:Bind ViewModel.ProductPanels[0].IsEdited,Converter={StaticResource ReverseBooleanConverter}}"
                            ToolTipService.ToolTip="Edit details"
                            >
                        <SymbolIcon Symbol="Edit"/>
                    </Button>
                    <Button x:Name="btnSave" Margin="2,2,2,2" Visibility="Collapsed" Tapped="btnSave_Tapped"
                            ToolTipService.ToolTip="Save details"
                            >
                        <SymbolIcon Symbol="Save"/>
                    </Button>
                    <Button x:Name="btnCancel" Margin="2,2,2,2" Visibility="Collapsed" Tapped="btnCancel_Tapped"
                            ToolTipService.ToolTip="Cancel changes made to details">
                        <SymbolIcon Symbol="Cancel"/>
                    </Button>
                </StackPanel>
                <!-- PRODUCT READONLY VIEW -->
                <Grid HorizontalAlignment="Stretch" x:Name="gridproductViewOnly">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <TextBox Style="{StaticResource LabelTextBlock}" Grid.Column="0" Text="Name" VerticalAlignment="Center"/>
                    <TextBlock Grid.Column="1" Text="{x:Bind ViewModel.CurrentProduct.Name, Mode=TwoWay}" VerticalAlignment="Center" TextWrapping="Wrap"/>

                    <TextBox Style="{StaticResource LabelTextBlock}" Grid.Row="1"  Grid.Column="0" Text="Categories" VerticalAlignment="Center"/>
                    <ListView 
                        Grid.Row="1" Grid.Column="1"
                        ItemsSource="{x:Bind ViewModel.CurrentProductCategories}"
                        MinHeight="60"
                        >
                        <ListView.ItemContainerStyle>
                            <Style TargetType="ListViewItem">
                                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                            </Style>
                        </ListView.ItemContainerStyle>
                        <ListView.ItemTemplate>
                            <!-- The editable category list has following features
                                    a. User can add a category by clicking a + button. In this cause a treeview 
                                    popup is displayed. Checking a node the product is assigned under this category. 
                                    Multiple nodes can be selected. 
                                    b. delete button to remove categories assigned. -->
                            <DataTemplate>
                                <ListView ItemsSource="{Binding Mode=TwoWay}">
                                    <ListView.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <ItemsStackPanel Orientation="Horizontal"/>
                                        </ItemsPanelTemplate>
                                    </ListView.ItemsPanel>
                                    <ListView.ItemContainerStyle>
                                        <Style TargetType="ListViewItem">
                                            <Setter Property="HorizontalAlignment" Value="Left"/>
                                        </Style>
                                    </ListView.ItemContainerStyle>
                                    <ListView.ItemTemplate>
                                        <DataTemplate x:DataType="local:ProductCategory">
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock Text="{x:Bind Name, Mode=TwoWay}"/>
                                                <TextBlock 
                                                        Text="->" 
                                                        Visibility="{Binding HasChildren, Converter={StaticResource booleanToVisibilityConverter}, Mode=TwoWay}"
                                                     TextWrapping="Wrap"
                                                    />
                                            </StackPanel>
                                        </DataTemplate>
                                    </ListView.ItemTemplate>
                                </ListView>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                    <TextBox Style="{StaticResource LabelTextBlock}" Grid.Column="0" Grid.Row="2" Text="SKUN" VerticalAlignment="Center"/>
                    <TextBlock Grid.Column="1" Grid.Row="2" Text="{x:Bind ViewModel.CurrentProduct.SKUN, Mode=TwoWay}" VerticalAlignment="Center" TextWrapping="Wrap"/>

                    <TextBox Style="{StaticResource LabelTextBlock}" Grid.Column="0" Grid.Row="3" Text="Small Description" VerticalAlignment="Center"/>
                    <TextBlock Grid.Column="1" Grid.Row="3" Text="{x:Bind ViewModel.CurrentProduct.ShortDescription, Mode=TwoWay}" VerticalAlignment="Center" TextWrapping="Wrap"/>

                    <TextBox Style="{StaticResource LabelTextBlock}" Grid.Column="0" Grid.Row="4" Text="Description" VerticalAlignment="Center"/>
                    <TextBlock Grid.Column="1" Grid.Row="4" Text="{x:Bind ViewModel.CurrentProduct.Description, Mode=TwoWay}" VerticalAlignment="Center" TextWrapping="Wrap"/>

                    <TextBox Style="{StaticResource LabelTextBlock}" Grid.Column="0" Grid.Row="5" Text="Notes" VerticalAlignment="Center"/>
                    <TextBlock Grid.Column="1" Grid.Row="5" Text="{x:Bind ViewModel.CurrentProduct.Notes, Mode=TwoWay}" VerticalAlignment="Center" TextWrapping="Wrap"/>

                    <TextBox Style="{StaticResource LabelTextBlock}" Grid.Column="0" Grid.Row="6" Text="Is Stockless ?" VerticalAlignment="Center"/>
                    <TextBlock Grid.Column="1" Grid.Row="6" 
                               Text="{x:Bind ViewModel.CurrentProduct.IsStockLess, Converter={StaticResource BooleanToStringConverter}, Mode=TwoWay}" 
                                TextWrapping="Wrap"
                               VerticalAlignment="Center"/>

                </Grid>

                <!-- PRODUCT EDIT VIEW -->
                <Grid 
                    x:Name="gridproductEditable" 
                    HorizontalAlignment="Stretch" 
                    Visibility="Collapsed"
                      >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <TextBox Style="{StaticResource LabelTextBlockRequired}" Grid.Column="0" Text="Name" VerticalAlignment="Center"/>
                    <TextBox Grid.Column="1" Text="{x:Bind ViewModel.CurrentProduct.Name, Mode=TwoWay}" VerticalAlignment="Center"/>

                    <TextBox Style="{StaticResource LabelTextBlockRequired}" Grid.Row="1"  Grid.Column="0" Text="Categories" VerticalAlignment="Center"/>
                    <RelativePanel Grid.Row="1" Grid.Column="1">
                        <Button x:Name="btnAddCategory" 
                                RelativePanel.AlignRightWithPanel="True" 
                                RelativePanel.AlignTopWithPanel="True"
                                ToolTipService.ToolTip="Assign this product to a new category."
                                >
                            <Button.Content>
                                <SymbolIcon Symbol="NewFolder"/>
                            </Button.Content>
                            <Button.Flyout>
                                <Flyout x:Name="foSelectCategory" 
                                        LightDismissOverlayMode="Off" 
                                        Placement="Full"
                                        Opening="foSelectCategory_Opening"
                                        >
                                    <RelativePanel>
                                        <StackPanel Orientation="Vertical">
                                            <TextBlock Text="Categories"/>
                                            <tvs:TreeView x:Name="treeCategories" 
                                                  IsItemClickEnabled="True" 
                                                  IsMultiSelectCheckBoxEnabled="True"
                                                  HorizontalAlignment="Stretch"
                                                  VerticalAlignment="Stretch"
                                                  ItemTemplate="{StaticResource TreeViewItemDataTemplate}"
                                                  Grid.Row="1"
                                                  TreeViewItemClick="treeCategories_TreeViewItemClick"
                                                  SelectionChanged="treeCategories_SelectionChanged">
                                                <tvs:TreeView.ItemContainerStyle>
                                                    <Style TargetType="ListViewItem">
                                                        <Setter Property="HorizontalAlignment" Value="Stretch"/>
                                                    </Style>
                                                </tvs:TreeView.ItemContainerStyle>
                                                <tvs:TreeView.ItemContainerTransitions>
                                                    <TransitionCollection>
                                                        <ContentThemeTransition />
                                                        <ReorderThemeTransition />
                                                        <EntranceThemeTransition IsStaggeringEnabled="False" />
                                                    </TransitionCollection>
                                                </tvs:TreeView.ItemContainerTransitions>
                                            </tvs:TreeView>

                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal" 
                                                    RelativePanel.AlignRightWithPanel="True" 
                                                    RelativePanel.AlignTopWithPanel="True">
                                            <Button x:Name="btnFlyoutClose" Click="btnFlyoutClose_Click">
                                                <SymbolIcon Symbol="Accept"></SymbolIcon>
                                            </Button>
                                        </StackPanel>
                                    </RelativePanel>
                                </Flyout>
                            </Button.Flyout>
                        </Button>
                        <ListView 
                        ItemsSource="{x:Bind ViewModel.CurrentProductCategories}"
                        MinHeight="60"
                        >
                            <ListView.ItemContainerStyle>
                                <Style TargetType="ListViewItem">
                                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                </Style>
                            </ListView.ItemContainerStyle>
                            <ListView.ItemTemplate>
                                <!-- The editable category list has following features
                                    a. User can add a category by clicking a + button. In this cause a treeview 
                                    popup is displayed. Checking a node the product is assigned under this category. 
                                    Multiple nodes can be selected. 
                                    b. delete button to remove categories assigned. -->
                                <DataTemplate>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <ListView Grid.Column="1" ItemsSource="{Binding Mode=TwoWay}">
                                            <ListView.ItemsPanel>
                                                <ItemsPanelTemplate>
                                                    <ItemsStackPanel Orientation="Horizontal"/>
                                                </ItemsPanelTemplate>
                                            </ListView.ItemsPanel>
                                            <ListView.ItemContainerStyle>
                                                <Style TargetType="ListViewItem">
                                                    <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                                </Style>
                                            </ListView.ItemContainerStyle>
                                            <ListView.ItemTemplate>
                                                <DataTemplate x:DataType="local:ProductCategory">
                                                    <StackPanel Orientation="Horizontal">
                                                        <TextBlock Text="{x:Bind Name, Mode=TwoWay}"/>
                                                        <TextBlock 
                                                        Text="->" 
                                                        Visibility="{Binding HasChildren, Converter={StaticResource booleanToVisibilityConverter}}"
                                                    />
                                                    </StackPanel>
                                                </DataTemplate>
                                            </ListView.ItemTemplate>
                                        </ListView>
                                        <Button Grid.Column="0" Tapped="CategoryItemDelete_Tapped" Tag="{Binding}">
                                            <SymbolIcon Symbol="Delete"/>
                                        </Button>
                                    </Grid>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </ListView>
                    </RelativePanel>

                    <TextBox Style="{StaticResource LabelTextBlockRequired}" Grid.Column="0" Grid.Row="2" Text="SKUN" VerticalAlignment="Center"/>
                    <TextBox Grid.Column="1" Grid.Row="2" Text="{x:Bind ViewModel.CurrentProduct.SKUN, Mode=TwoWay}" VerticalAlignment="Center"/>

                    <TextBox Style="{StaticResource LabelTextBlock}" Grid.Column="0" Grid.Row="3" Text="Small Description" VerticalAlignment="Center"/>
                    <TextBox Grid.Column="1" Grid.Row="3" AcceptsReturn="True" TextWrapping="Wrap" ScrollViewer.VerticalScrollBarVisibility="Auto" 
                             Text="{x:Bind ViewModel.CurrentProduct.ShortDescription, Mode=TwoWay}" VerticalAlignment="Center"/>

                    <TextBox Style="{StaticResource LabelTextBlock}" Grid.Column="0" Grid.Row="4" Text="Description" VerticalAlignment="Center"/>
                    <TextBox Grid.Column="1" Grid.Row="4" AcceptsReturn="True" TextWrapping="Wrap" ScrollViewer.VerticalScrollBarVisibility="Auto" 
                             Text="{x:Bind ViewModel.CurrentProduct.Description, Mode=TwoWay}" VerticalAlignment="Center"/>

                    <TextBox Style="{StaticResource LabelTextBlock}" Grid.Column="0" Grid.Row="5" Text="Notes" VerticalAlignment="Center"/>
                    <TextBox Grid.Column="1" Grid.Row="5" AcceptsReturn="True" TextWrapping="Wrap" ScrollViewer.VerticalScrollBarVisibility="Auto" 
                             Text="{x:Bind ViewModel.CurrentProduct.Notes, Mode=TwoWay}" VerticalAlignment="Center"/>

                    <CheckBox IsChecked="{x:Bind ViewModel.CurrentProduct.IsStockLess, Mode=TwoWay}" Grid.Row="6" Grid.Column="1">Is Stockless</CheckBox>
                </Grid>
            </RelativePanel>
        </Border>
    </Grid>
</UserControl>