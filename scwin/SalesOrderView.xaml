<Page
    x:Class="scwin.SalesOrderView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:scwin"
    xmlns:g="using:sggraphs"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Page.Resources>
        <local:DiscountTypeToBooleanConverter x:Key="DiscountTypeToBooleanConverter"/>
        <local:DiscountTypeToTextConverter x:Key="DiscountTypeToTextConverter"/>
    </Page.Resources>
    
    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        
        <Grid.Resources>
            <GridLength x:Key="glBtnRemove">45</GridLength>
            <GridLength x:Key="glProductName">*</GridLength>
            <GridLength x:Key="glExpedited">100</GridLength>
            <GridLength x:Key="glUnitPrice">150</GridLength>
            <GridLength x:Key="glQty">100</GridLength>
            <GridLength x:Key="glLineGross">150</GridLength>
            <GridLength x:Key="glDiscount">150</GridLength>
            <GridLength x:Key="glLineNet">150</GridLength>


            <DataTemplate x:Key="ComboItemGeneralStatusTemplate" x:DataType="local:GeneralStatus">
                <Grid Width="350">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width=".5*"/>
                        <ColumnDefinition Width=".5*"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="{x:Bind PublicName}"/>
                    <TextBlock Text="{x:Bind PrivateName}" Grid.Column="1"/>
                </Grid>
            </DataTemplate>


        </Grid.Resources>
        
        <RelativePanel x:Name="relativePanel" Margin="3">
            <StackPanel Orientation="Horizontal" x:Name="PageHeaderPanel">
                <TextBlock Style="{StaticResource PageTitleTextBlockStyle}"
                           Text="Order #"
                           />
                <TextBlock Style="{StaticResource PageTitleTextBlockStyle}" 
                           Text="{x:Bind ViewModel.CurrentOrder.Order.OrderNumber, Mode=OneWay}"
                           />
                
                <TextBlock Margin="0" Padding="0" Style="{StaticResource PageTitleTextBlockStyle}" Text="*"
                           Visibility="{x:Bind ViewModel.CurrentOrder.HasChanges, Mode=OneWay}"
                           VerticalAlignment="Top"
                           />
            </StackPanel>


            <CommandBar x:Name="MainCommandBar" Background="Transparent" Loaded="MainCommandBar_Loaded"
                        RelativePanel.AlignTopWithPanel="True" RelativePanel.RightOf="PageHeaderPanel" RelativePanel.AlignRightWithPanel="True">
                <AppBarButton x:Name="ButtonSaveOrder" Icon="Save" 
                              IsEnabled="{x:Bind ViewModel.CurrentOrder.HasValidChanges, Mode=OneWay}" 
                              Label="Save" Click="ButtonSaveOrder_Click"/>
                <AppBarButton x:Name="ButtonRevertOrder" Icon="Undo" 
                              IsEnabled="{x:Bind ViewModel.CurrentOrder.CanRevert, Mode=OneWay}" 
                              Label="Revert" Click="ButtonRevertOrder_Click"/>
            </CommandBar>

            <Rectangle 
                Fill="{StaticResource SystemControlBackgroundAccentBrush}" 
                Height="1" 
                Stroke="{StaticResource SystemControlBackgroundAccentBrush}" 
                StrokeThickness="1" 
                HorizontalAlignment="Stretch" 
                RelativePanel.Below="MainCommandBar"
                Stretch="Fill"
                Width="{Binding ElementName=relativePanel, Path=ActualWidth, Mode=OneWay}"
                />

            <ScrollViewer x:Name="OrderBody" RelativePanel.AlignBottomWithPanel="True" RelativePanel.AlignLeftWithPanel="True" RelativePanel.AlignRightWithPanel="True"
                          RelativePanel.Below="PageHeaderPanel" Margin="0,10,0,0">
                <Grid Visibility="{x:Bind ViewModel.IsLoaded, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay}">

                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <!-- this is left for displaying order status flow in a vertical fashion-->
                    </Grid.ColumnDefinitions>

                    <StackPanel Orientation="Vertical">
                        <local:CustomerViewControl 
                            Customer="{x:Bind ViewModel.CurrentOrder.Customer, Mode=OneWay}" 
                            CostCenter="{x:Bind ViewModel.CurrentOrder.CostCenter, Mode=OneWay}"
                            Contact="{x:Bind ViewModel.CurrentOrder.Contact, Mode=OneWay}"
                            BillingAddress="{x:Bind ViewModel.CurrentOrder.BillingAddress, Mode=OneWay}"
                            ShippingAddress="{x:Bind ViewModel.CurrentOrder.ShippingAddress, Mode=OneWay}"
                        />
                        <Button Visibility="{x:Bind ViewModel.CurrentOrder.Customer, Converter={StaticResource NullToVisibilityConverter}, ConverterParameter=True, Mode=OneWay}">
                            Select Customer, Costcenter and Contact*
                            <Button.Flyout>
                                <Flyout LightDismissOverlayMode="Off" Placement="Bottom">
                                    <local:ChoooseACustomer HorizontalContentAlignment="Stretch" 
                                                            HorizontalAlignment="Stretch"
                                                            VerticalAlignment="Stretch" 
                                                            Customer="{x:Bind ViewModel.CurrentOrder.Customer, Mode=TwoWay}" 
                                                            CostCenter="{x:Bind ViewModel.CurrentOrder.CostCenter, Mode=TwoWay}" 
                                                            Contact="{x:Bind ViewModel.CurrentOrder.Contact, Mode=TwoWay}" 
                                                            CustomerViewmodel="{x:Bind CustViewModel, Mode=OneWay}"
                                                            />
                                    <Flyout.FlyoutPresenterStyle>
                                        <Style TargetType="FlyoutPresenter">
                                            <Setter Property="MaxWidth" Value="800"/>
                                            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                        </Style>
                                    </Flyout.FlyoutPresenterStyle>
                                </Flyout>
                            </Button.Flyout>
                        </Button>
                        <Button Visibility="{x:Bind ViewModel.CurrentOrder.Customer, Converter={StaticResource NullToVisibilityConverter}, ConverterParameter=False,Mode=OneWay}">
                            Change Customer, Costcenter and/or Contact*
                            <Button.Flyout>
                                <Flyout LightDismissOverlayMode="Off" Placement="Bottom">
                                    <local:ChoooseACustomer HorizontalContentAlignment="Stretch" 
                                                            HorizontalAlignment="Stretch"
                                                            VerticalAlignment="Stretch" 
                                                            Customer="{x:Bind ViewModel.CurrentOrder.Customer, Mode=TwoWay}" 
                                                            CostCenter="{x:Bind ViewModel.CurrentOrder.CostCenter, Mode=TwoWay}" 
                                                            Contact="{x:Bind ViewModel.CurrentOrder.Contact, Mode=TwoWay}" 
                                                            CustomerViewmodel="{x:Bind CustViewModel, Mode=OneWay}"
                                                            />
                                    <Flyout.FlyoutPresenterStyle>
                                        <Style TargetType="FlyoutPresenter">
                                            <Setter Property="MaxWidth" Value="800"/>
                                            <Setter Property="MaxHeight" Value="900"/>
                                            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                        </Style>
                                    </Flyout.FlyoutPresenterStyle>
                                </Flyout>
                            </Button.Flyout>
                        </Button>
                    </StackPanel>

                    <Grid Grid.Column="1">
                        <Grid.Resources>
                            <Style TargetType="TextBlock">
                                <Setter Property="Margin" Value="4"/>
                                <Setter Property="VerticalAlignment" Value="Center"/>
                            </Style>
                            <Style TargetType="ComboBox">
                                <Setter Property="Margin" Value="4"/>
                                <Setter Property="VerticalAlignment" Value="Center"/>
                            </Style>
                        </Grid.Resources>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <TextBlock Text="Placed:" HorizontalAlignment="Right" Style="{StaticResource LabelTextBlockStyle}" VerticalAlignment="Center"/>
                        <TextBlock Grid.Column="1" Text="{x:Bind ViewModel.CurrentOrder.Order.DateAndTime.ToString(), Mode=OneWay}" VerticalAlignment="Center">
                            <TextBlock.RenderTransform>
                                <TranslateTransform Y="10"/>
                            </TextBlock.RenderTransform>
                        </TextBlock>

                        <TextBlock Text="Order Status:" HorizontalAlignment="Right" 
                                   Style="{StaticResource LabelTextBlockStyle}" Grid.Row="1" 
                                   VerticalAlignment="Center">
                            <TextBlock.RenderTransform>
                                <TranslateTransform Y="15"/>
                            </TextBlock.RenderTransform>
                        </TextBlock>
                        <!-- prevent dropdown changes when the order is in draft state -->
                        <ComboBox Grid.Row="1" Grid.Column="1" 
                                  HorizontalAlignment="Stretch" VerticalAlignment="Center"
                                  ItemsSource="{x:Bind ViewModel.OrderStatusList, Mode=OneWay}"
                                  ItemTemplate="{StaticResource ComboItemGeneralStatusTemplate}"
                                  SelectedItem="{x:Bind ViewModel.CurrentOrder.OrderStatus, Mode=TwoWay}"
                                  IsEnabled="{x:Bind ViewModel.CurrentOrder.IsExistingOrder, Mode=OneWay}"
                                  >
                            <ComboBox.Header>
                                <Grid Width="350">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width=".5*"/>
                                        <ColumnDefinition Width=".5*"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Text="Public Name"/>
                                    <TextBlock Text="Private Name" Grid.Column="1"/>
                                </Grid>
                            </ComboBox.Header>
                            <ComboBox.ItemContainerStyle>
                                <Style TargetType="ComboBoxItem">
                                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                </Style>
                            </ComboBox.ItemContainerStyle>
                        </ComboBox>

                        <TextBlock Text="Payment Status:" HorizontalAlignment="Right" Style="{StaticResource LabelTextBlockStyle}" Grid.Row="2" VerticalAlignment="Center">
                            <TextBlock.RenderTransform>
                                <TranslateTransform Y="15"/>
                            </TextBlock.RenderTransform>
                        </TextBlock>
                        <ComboBox Grid.Row="2" Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Center"
                                  ItemsSource="{x:Bind ViewModel.PaymentStatusList, Mode=OneWay}"
                                  ItemTemplate="{StaticResource ComboItemGeneralStatusTemplate}"
                                  SelectedItem="{x:Bind ViewModel.CurrentOrder.PaymentStatus, Mode=TwoWay}"
                                  IsEnabled="{x:Bind ViewModel.CurrentOrder.IsExistingOrder, Mode=OneWay}"
                                  >
                            <ComboBox.Header>
                                <Grid Width="350">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width=".5*"/>
                                        <ColumnDefinition Width=".5*"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Text="Public Name"/>
                                    <TextBlock Text="Private Name" Grid.Column="1"/>
                                </Grid>
                            </ComboBox.Header>
                            <ComboBox.ItemContainerStyle>
                                <Style TargetType="ComboBoxItem">
                                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                </Style>
                            </ComboBox.ItemContainerStyle>
                        </ComboBox>

                        <TextBlock Text="Field Rep:" HorizontalAlignment="Right" Grid.Row="3" Style="{StaticResource LabelTextBlockStyle}" VerticalAlignment="Center" />
                        <TextBlock Grid.Column="1" Text="TODO" Grid.Row="3" VerticalAlignment="Center"/>

                    </Grid>

                    <Border 
                        Grid.Column="2" Grid.ColumnSpan="3" 
                        BorderBrush="{StaticResource SystemControlBackgroundAccentBrush}" BorderThickness="1" CornerRadius="5" 
                        Grid.RowSpan="2" Margin="10"
                            Visibility="{x:Bind ViewModel.CurrentOrder, Converter={StaticResource NullToVisibilityConverter}, Mode=OneWay}"
                            >
                    <Grid Width="160">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <TextBlock Style="{StaticResource BaseTextBlockStyle}" HorizontalAlignment="Center">
                            <Underline>
                                <Run Text="Order History" />
                            </Underline>
                        </TextBlock>
                        <g:TransactionFlowControl Grid.Row="1" TransactionFlowItems="{x:Bind OrderFlow, Mode=OneWay}" Margin="10">
                            <g:TransactionFlowControl.RenderTransform>
                                <ScaleTransform ScaleX=".6" ScaleY=".6"/>
                            </g:TransactionFlowControl.RenderTransform>
                        </g:TransactionFlowControl>
                    </Grid>
                    </Border>

                    <Grid Grid.Row="1" Grid.ColumnSpan="2">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Grid Grid.Row="0">
                            <Grid.ColumnDefinitions>
                                <!--0-->
                                <ColumnDefinition Width="{StaticResource glBtnRemove}"/>
                                <!--1-->
                                <ColumnDefinition Width="{StaticResource glProductName}"/>
                                <!-- product name -->
                                <!--2-->
                                <ColumnDefinition Width="{StaticResource glExpedited}"/>
                                <!-- is expedited -->
                                <!-- unit price (std or tier price) -->
                                <!--3-->
                                <ColumnDefinition Width="{StaticResource glUnitPrice}"/>
                                <!-- qty -->
                                <!--4-->
                                <ColumnDefinition Width="{StaticResource glQty}"/>
                                <!-- line gross -->
                                <!--5-->
                                <ColumnDefinition Width="{StaticResource glLineGross}"/>
                                <!-- disc and push button to swtich between % or abs -->
                                <!--6-->
                                <ColumnDefinition Width="{StaticResource glDiscount}"/>
                                <!-- line net -->
                                <!--7-->
                                <ColumnDefinition Width="{StaticResource glLineNet}"/>
                            </Grid.ColumnDefinitions>
                            <Border Background="{StaticResource SystemControlBackgroundAccentBrush}" Grid.Column="1" Grid.ColumnSpan="7" CornerRadius="5,5,0,0"/>
                            <TextBlock TextWrapping="Wrap" Grid.Column="1" 
                                       Style="{StaticResource 
                                TextBlockColumnHeader}" HorizontalAlignment="Center">
                                <Run Text="Product"/><Run Text="*"/>
                            </TextBlock>
                            <TextBlock Text="Is Expedited?" TextWrapping="Wrap" Grid.Column="2" Style="{StaticResource TextBlockColumnHeader}" HorizontalAlignment="Center"/>
                            <TextBlock Text="Price" TextWrapping="Wrap" Grid.Column="3" Style="{StaticResource TextBlockColumnHeader}" HorizontalAlignment="Center"/>
                            <TextBlock TextWrapping="Wrap" Grid.Column="4" Style="{StaticResource TextBlockColumnHeader}" HorizontalAlignment="Center">
                                <Run Text="Qty"/><Run Text="*"/>
                            </TextBlock>
                            <TextBlock Text="Total" TextWrapping="Wrap" Grid.Column="5" Style="{StaticResource TextBlockColumnHeader}" HorizontalAlignment="Center"/>
                            <TextBlock Text="Discount" TextWrapping="Wrap" Grid.Column="6" Style="{StaticResource TextBlockColumnHeader}" HorizontalAlignment="Center"/>
                            <TextBlock Text="Final" TextWrapping="Wrap" Grid.Column="7" Style="{StaticResource TextBlockColumnHeader}" HorizontalAlignment="Center"/>
                        </Grid>
                        <StackPanel Grid.Row="1" Orientation="Vertical">
                            <ListView x:Name="lvOrderDetails" ItemsSource="{x:Bind ViewModel.CurrentOrder.OrderDetails,Mode=OneWay}">
                                <ListView.ItemTemplate>
                                    <DataTemplate x:DataType="local:SalesOrderDetailsWrapper">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <!--0-->
                                                <ColumnDefinition Width="{StaticResource glBtnRemove}"/>
                                                <!--1-->
                                                <ColumnDefinition Width="{StaticResource glProductName}"/>
                                                <!-- product name -->
                                                <!--2-->
                                                <ColumnDefinition Width="{StaticResource glExpedited}"/>
                                                <!-- is expedited -->
                                                <!-- unit price (std or tier price) -->
                                                <!--3-->
                                                <ColumnDefinition Width="{StaticResource glUnitPrice}"/>
                                                <!-- qty -->
                                                <!--4-->
                                                <ColumnDefinition Width="{StaticResource glQty}"/>
                                                <!-- line gross -->
                                                <!--5-->
                                                <ColumnDefinition Width="{StaticResource glLineGross}"/>
                                                <!-- disc and push button to swtich between % or abs -->
                                                <!--6-->
                                                <ColumnDefinition Width="{StaticResource glDiscount}"/>
                                                <!-- line net -->
                                                <!--7-->
                                                <ColumnDefinition Width="{StaticResource glLineNet}"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>
                                            <!--<Grid.Resources>
                                                <Style TargetType="TextBlock">
                                                    <Setter Property="FontSize" Value="8"/>
                                                </Style>
                                                <Style TargetType="TextBox">
                                                    <Setter Property="FontSize" Value="8"/>
                                                </Style>
                                                <Style TargetType="ToggleButton">
                                                    <Setter Property="FontSize" Value="8"/>
                                                </Style>
                                                <Style TargetType="CheckBox">
                                                    <Setter Property="FontSize" Value="8"/>
                                                </Style>
                                            </Grid.Resources>-->
                                            <Button x:Name="btnRemoveOrderLine" 
                                                    Style="{StaticResource ThemeSymbolFontButton}" Content="&#xE106;" 
                                                    VerticalAlignment="Center"  HorizontalAlignment="Center"
                                                    Click="btnRemoveOrderLine_Click"
                                                    />
                                            <ContentControl x:Name="txtProductName" 
                                                    Grid.Column="1" 
                                                    VerticalAlignment="Center" 
                                                    HorizontalAlignment="Stretch"
                                                    HorizontalContentAlignment="Stretch"
                                                    VerticalContentAlignment="Stretch"
                                                    KeyDown="txtProductName_KeyDown"
                                                    Tapped="txtProductName_Tapped"
                                                >
                                                <FlyoutBase.AttachedFlyout>
                                                    <Flyout x:Name="flyProductLookup" Placement="Bottom">
                                                        <local:ChooseAProduct 
                                                            DisplayDetailOptions="ProductInfoWithPriceAndInventory" 
                                                            DataContext="{x:Bind}" 
                                                            ProductSelected="ChooseAProduct_ProductSelected"
                                                            />
                                                        <Flyout.FlyoutPresenterStyle>
                                                            <Style TargetType="FlyoutPresenter">
                                                                <Setter Property="MaxWidth" Value="1000"/>
                                                                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                                            </Style>
                                                        </Flyout.FlyoutPresenterStyle>
                                                    </Flyout>
                                                </FlyoutBase.AttachedFlyout>
                                                <Grid>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="Auto"/>
                                                        <ColumnDefinition Width="*"/>
                                                        <ColumnDefinition Width="Auto"/>
                                                    </Grid.ColumnDefinitions>
                                                    <Image Source="{x:Bind ProductItem.ProductItem.TitleImage.Image, Mode=OneWay}" MaxWidth="32" MaxHeight="64" Stretch="Uniform"/>
                                                    <TextBox x:Name="txtProd" Margin="1" Grid.Column="1" 
                                                             Text="{x:Bind ProductName, Mode=TwoWay}"
                                                             InputScope="Default"
                                                             KeyDown="TextBox_KeyDown"
                                                             />
                                                    <Button Margin="1" Grid.Column="2"
                                                            FontFamily="{StaticResource SegoeSymbolFontName}" Content="&#xe11a;"
                                                            Tapped="Button_Tapped"
                                                            />
                                                </Grid>
                                            </ContentControl>
                                            <Grid Grid.Column="2"  VerticalAlignment="Center" HorizontalAlignment="Stretch" Margin="4,0,4,0">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width=".5*"/>
                                                    <ColumnDefinition Width=".5*"/>
                                                </Grid.ColumnDefinitions>
                                                <CheckBox Margin="0,0,0,0" MinWidth="0" VerticalAlignment="Center" HorizontalAlignment="Right" IsChecked="{x:Bind InnerItem.IsExpedited, Mode=TwoWay}"/>
                                                <Button IsEnabled="{x:Bind InnerItem.IsExpedited,Mode=OneWay}" Grid.Column="1" Style="{StaticResource ThemeSymbolFontButton}" FontSize="12" Content="&#xE18B;" 
                                                        ToolTipService.ToolTip="Click here to enter expected delivery date for this product in the order." VerticalAlignment="Center"
                                                        HorizontalAlignment="Left"
                                                        >
                                                    <Button.Flyout>
                                                        <Flyout x:Name="flyExpeditedView" Opening="flyExpeditedView_Opening" Closed="flyExpeditedView_Closed">
                                                            <DatePicker x:Name="dpOrderItemExpectedDate" 
                                                                    Header="When does customer expect this product ?"/>
                                                        </Flyout>
                                                    </Button.Flyout>
                                                </Button>
                                            </Grid>
                                            <Grid Grid.Column="3" VerticalAlignment="Center" HorizontalAlignment="Stretch">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                </Grid.ColumnDefinitions>
                                                <TextBox x:Name="txtProductPrice" Grid.Column="0" IsReadOnly="False" 
                                                         HorizontalAlignment="Stretch" TextAlignment="Right" 
                                                         InputScope="CurrencyAmount" 
                                                         VerticalAlignment="Center" 
                                                         Text="{x:Bind UnitPrice, Mode=TwoWay, FallbackValue=0.0}"
                                                         />
                                                <Button Visibility="{x:Bind IsTieredPricePlan, FallbackValue=Collapsed, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}" Grid.Column="1" Style="{StaticResource ThemeSymbolFontButton}" FontSize="12" Content="&#xE18B;" ToolTipService.ToolTip="View tier price details." VerticalAlignment="Center">
                                                    <Button.Flyout>
                                                        <Flyout x:Name="flyTierPriceView">
                                                            <ContentControl ContentTemplate="{StaticResource TierPricePlanAllInOneTemplate}"
                                                                            Content="{x:Bind ProductItem.PricePlan, Mode=OneWay}"/>
                                                        </Flyout>
                                                    </Button.Flyout>
                                                </Button>
                                            </Grid>
                                            <TextBox Grid.Column="4" InputScope="Number" 
                                                     Text="{x:Bind Quantity, Mode=TwoWay, FallbackValue=0}"
                                                     VerticalAlignment="Center" TextAlignment="Right" HorizontalAlignment="Stretch"/>
                                            <TextBox IsReadOnly="True" TextAlignment="Right" Text="{x:Bind InnerItem.Gross, Mode=OneWay}" 
                                                     Grid.Column="5" HorizontalAlignment="Stretch"/>
                                            <Grid Grid.Column="6" VerticalAlignment="Center" HorizontalAlignment="Stretch">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width=".3*"/>
                                                    <ColumnDefinition Width=".7*"/>
                                                </Grid.ColumnDefinitions>
                                                <ToggleButton Grid.Column="0" IsThreeState="False" 
                                                            Content="{x:Bind DiscountType, Converter={StaticResource DiscountTypeToTextConverter},Mode=OneWay}"
                                                            IsChecked="{x:Bind DiscountType, Mode=TwoWay, Converter={StaticResource DiscountTypeToBooleanConverter}}"
                                                              VerticalAlignment="Center" HorizontalAlignment="Right"/>
                                                <TextBox TextAlignment="Right" Text="{x:Bind Discount, Mode=TwoWay}" 
                                                         Grid.Column="1" VerticalAlignment="Center"/>
                                            </Grid>
                                            <TextBox IsReadOnly="True" 
                                                     TextAlignment="Right"
                                                     Text="{x:Bind InnerItem.Net, Mode=OneWay}"
                                                     Grid.Column="7" VerticalAlignment="Center" HorizontalAlignment="Stretch"/>
                                            <TextBlock Grid.Row="1" Grid.ColumnSpan="8" HorizontalAlignment="Center" TextWrapping="Wrap">
                                                <Italic>
                                                    <Run Text="{x:Bind Message, Mode=OneWay}"/>
                                                </Italic>
                                            </TextBlock>
                                        </Grid>
                                    </DataTemplate>
                                </ListView.ItemTemplate>
                                <ListView.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <ItemsStackPanel Orientation="Vertical"/>
                                    </ItemsPanelTemplate>
                                </ListView.ItemsPanel>
                                <ListView.ItemContainerStyle>
                                    <Style TargetType="ListViewItem">
                                        <Setter Property="MinHeight" Value="0"/>
                                        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                    </Style>
                                </ListView.ItemContainerStyle>
                            </ListView>
                            <Button x:Name="btnAddOrderItem" 
                                    Style="{StaticResource ThemeSymbolFontButton}" 
                                    HorizontalAlignment="Center"
                                    Click="btnAddOrderItem_Click"
                                    >
                                <TextBlock>
                                    <Run Text="&#xE109;"/>
                                    <Run Text="Add Order Item"/>
                                </TextBlock>
                            </Button>
                        </StackPanel>
                    </Grid>
                    <Rectangle Grid.Row="2" Grid.ColumnSpan="2" Fill="{StaticResource SystemControlBackgroundAccentBrush}" 
                        Height="1" 
                        Stroke="{StaticResource SystemControlBackgroundAccentBrush}" 
                        StrokeThickness="1" 
                        HorizontalAlignment="Stretch" 
                        Stretch="Fill"
                        VerticalAlignment="Top"
                        />

                    <Grid Grid.Row="2" Margin="10" Grid.ColumnSpan="2" Visibility="{x:Bind ViewModel.CurrentOrder, Converter={StaticResource NullToVisibilityConverter}, Mode=OneWay}" VerticalAlignment="Top">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="{StaticResource glDiscount}"/>
                            <ColumnDefinition Width="{StaticResource glLineNet}"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <DatePicker x:Name="dtOrderExpectedDate" Header="Delivery Expected On or Before" DateChanged="dtOrderExpectedDate_DateChanged" />
                        <TextBox Header="Notes" Margin="0,0,20,0" Grid.Row="1" Grid.RowSpan="3" 
                                 AcceptsReturn="True" Text="{x:Bind ViewModel.CurrentOrder.Order.Notes, Mode=TwoWay}"/>

                        <TextBox Header="Total Bef. Discounts/Tax" IsReadOnly="True" 
                                 TextAlignment="Right"
                                 Grid.Column="2" VerticalAlignment="Bottom" 
                                 Margin="0,0,0,12" HorizontalAlignment="Stretch"
                                 Text="{x:Bind ViewModel.CurrentOrder.OrderTotalBeforeTaxesAndDiscounts, Mode=OneWay}"
                                 />

                        <Grid Grid.Column="1" Grid.Row="1" VerticalAlignment="Top" HorizontalAlignment="Stretch">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <ToggleButton 
                                x:Name="txtOrderHeaderDiscountType"
                                IsThreeState="True" 
                                HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,0,0,5"
                                Content="{x:Bind ViewModel.CurrentOrder.OrderDiscountType, Converter={StaticResource DiscountTypeToTextConverter},Mode=OneWay}"
                                IsChecked="{x:Bind ViewModel.CurrentOrder.Order.DiscountType, Mode=TwoWay, Converter={StaticResource DiscountTypeToBooleanConverter}}"
                                Checked="txtOrderHeaderDiscountType_Checked"
                                />
                            <TextBox Header="Discount" 
                                     Grid.Column="1" 
                                     VerticalAlignment="Bottom"
                                     TextAlignment="Right"
                                     InputScope="Number"
                                     Text="{x:Bind ViewModel.CurrentOrder.OrderDiscount, Mode=TwoWay,FallbackValue=0.0}"
                                     />
                        </Grid>


                        <TextBox Header="Pre-tax Total" IsReadOnly="True" Grid.Row="1" Grid.Column="2" 
                                 VerticalAlignment="Bottom" Margin="0,0,0,12" HorizontalAlignment="Stretch"
                                 TextAlignment="Right"
                                 Text="{x:Bind ViewModel.CurrentOrder.OrderPreTaxTotal, Mode=OneWay}"
                                 />

                        <TextBox Header="Tax%" 
                                 Grid.Column="1" Grid.Row="2" 
                                 InputScope="Number"
                                 VerticalAlignment="Top" HorizontalAlignment="Stretch" 
                                 TextAlignment="Right" Text="{x:Bind ViewModel.CurrentOrder.OrderTaxPct, Mode=TwoWay,FallbackValue=0.0}"/>
                        
                        <TextBox Header="Total" IsReadOnly="True" 
                                 Grid.Row="2" Grid.Column="2" VerticalAlignment="Top" 
                                 HorizontalAlignment="Stretch" TextAlignment="Right" 
                                 Text="{x:Bind ViewModel.CurrentOrder.OrderFinal, Mode=TwoWay}"/>
                    </Grid>

                </Grid>

            </ScrollViewer>

            <ProgressRing x:Name="OrderLoadingProgressRing"
                          Width="80"
                          VerticalAlignment="Center"
                          IsActive="{x:Bind ViewModel.IsLoaded, Converter={StaticResource ReverseBooleanConverter}, Mode=OneWay}"
                          RelativePanel.AlignHorizontalCenterWithPanel="True"
                          RelativePanel.AlignVerticalCenterWithPanel="True"
                          Visibility="{x:Bind ViewModel.IsLoaded, Mode=OneWay, Converter={StaticResource ReverseBooleanToVisibilityConverter}}"/>
        </RelativePanel>
        
    </Grid>
</Page>
